#include <stdio.h>
#include <pthread.h>
#include <semaphore.h>
#include <unistd.h>

#define N 5
sem_t forks[N];

void* philosopher(void* num) {
    int i = *(int*)num;
    while(1) {
        printf("Philosopher %d is thinking.\n", i);
        sleep(1);
        sem_wait(&forks[i]);
        sem_wait(&forks[(i+1)%N]);
        printf("Philosopher %d is eating.\n", i);
        sleep(1);
        sem_post(&forks[i]);
        sem_post(&forks[(i+1)%N]);
    }
    return NULL;
}

int main() {
    pthread_t ph[N];
    int phil[N];
    for(int i=0;i<N;i++) sem_init(&forks[i],0,1);

    for(int i=0;i<N;i++){
        phil[i] = i;
        pthread_create(&ph[i], NULL, philosopher, &phil[i]);
    }

    for(int i=0;i<N;i++) pthread_join(ph[i], NULL);
    return 0;
}
