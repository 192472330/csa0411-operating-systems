/* file_mgmt.c
   Simple file management operations demo.
   Compile: gcc -o file_mgmt file_mgmt.c
   Usage: ./file_mgmt <filename>
*/
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <string.h>

int main(int argc, char *argv[]) {
    if (argc < 2) { fprintf(stderr,"Usage: %s <filename>\n", argv[0]); return 1; }
    const char *fname = argv[1];

    /* create and write */
    int fd = open(fname, O_WRONLY | O_CREAT | O_TRUNC, 0644);
    if (fd < 0) { perror("open create"); return 1; }
    const char *data = "Sample data written by file_mgmt\n";
    write(fd, data, strlen(data));
    close(fd);
    printf("Created and wrote to %s\n", fname);

    /* read */
    fd = open(fname, O_RDONLY);
    if (fd < 0) { perror("open read"); return 1; }
    char buf[256]; ssize_t n = read(fd, buf, sizeof(buf)-1);
    if (n >= 0) { buf[n]=0; printf("Read content:\n%s\n", buf); } else perror("read");
    close(fd);

    /* rename */
    char newname[256];
    snprintf(newname, sizeof(newname), "%s.renamed", fname);
    if (rename(fname, newname) == 0) printf("Renamed %s -> %s\n", fname, newname);
    else perror("rename");

    /* chmod */
    if (chmod(newname, 0600) == 0) printf("Changed mode of %s to 0600\n", newname);
    else perror("chmod");

    /* stat */
    struct stat st;
    if (stat(newname, &st) == 0) {
        printf("Metadata: size=%lld, mode=%o\n", (long long)st.st_size, (unsigned)st.st_mode & 0777);
    } else perror("stat");

    /* delete */
    if (unlink(newname) == 0) printf("Deleted %s\n", newname);
    else perror("unlink");

    return 0;
}
