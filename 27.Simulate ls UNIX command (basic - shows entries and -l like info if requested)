/* my_ls.c
   Simple ls-like program. Supports: my_ls [ -l ] [ dir ]
   Compile: gcc -o my_ls my_ls.c
*/
#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>
#include <sys/stat.h>
#include <time.h>
#include <string.h>

void print_long(const char *path, const char *name) {
    char full[512];
    snprintf(full, sizeof(full), "%s/%s", path, name);
    struct stat st;
    if (stat(full, &st) == -1) { perror("stat"); return; }
    printf("%6lld %4lu %4u %4u %8lld %s %s\n",
           (long long)st.st_ino,
           st.st_blocks,
           (unsigned)st.st_uid,
           (unsigned)st.st_gid,
           (long long)st.st_size,
           ctime(&st.st_mtime) + 4, /* trim newline */
           name);
}

int main(int argc, char *argv[]) {
    int longfmt = 0; const char *path = ".";
    for (int i=1;i<argc;i++){
        if (strcmp(argv[i], "-l") == 0) longfmt = 1;
        else path = argv[i];
    }
    DIR *d = opendir(path);
    if (!d) { perror("opendir"); return 1; }
    struct dirent *e;
    while ((e = readdir(d)) != NULL) {
        if (!longfmt) printf("%s  ", e->d_name);
        else print_long(path, e->d_name);
    }
    if (!longfmt) printf("\n");
    closedir(d);
    return 0;
}
